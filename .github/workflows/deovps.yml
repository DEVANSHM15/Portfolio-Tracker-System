name: DevOps CI - Docker + Linting
on: [push, pull_request]

jobs:
  build-and-lint:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pylint

    - name: Run Pylint
      run: |
        pylint app.py || true  # prevents job from failing if score < 10  

  sanity:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r test-requirements.txt
      - name: Run sanity tests
        run: |
          pytest -m "sanity" --maxfail=1 --disable-warnings -q --junitxml=sanity-results.xml
      - name: Upload sanity test results
        uses: actions/upload-artifact@v3
        with:
          name: sanity-test-results
          path: sanity-results.xml

  regression:
    runs-on: ubuntu-latest
    needs: sanity
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r test-requirements.txt
      - name: Run regression tests with coverage
        run: |
          coverage run -m pytest --junitxml=regression-results.xml
          coverage report -m
          coverage xml
      - name: Upload regression test results
        uses: actions/upload-artifact@v3
        with:
          name: regression-test-results
          path: regression-results.xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: coverage.xml
          fail_ci_if_error: true


    # Optional: fail if score too low
    # - name: Run Pylint with score check
    #   run: |
    #     score=$(pylint app.py | tee /dev/tty | tail -1 | awk '{print $7}')
    #     echo "Pylint Score: $score"
    #     if (( $(echo "$score < 8.0" | bc -l) )); then exit 1; fi
